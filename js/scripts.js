let a = 5+3 //8
let b = a%5 // 3
let c = 5*b**2 //45
let d = 10-a/2 //6
let e = 6*2/d //2
let f = b%e+4/e //3

//TAMB√âM PODEMOS FAZER:

let n = 3
n = n+4 // n deixa de valer  3 e passa a valer 7 isso √© auto atribui√ß√£o
n = n-5 // o n que estava valendo 7 deixa de valer 7 e passa a valer 2 ... tamb√©m temos a short version deu auto atribui√ß√£o que √© da seguinte forma
n*=4 // n vale 8
n/=2 ou n=n/2 // n passa a valer 4

//OPERADORES DE INCREMENTO
/*Uma forma ainda mais eficaz de simplificar e variavel √© usar operadores de incremento*/
 let x = 5
 x=x+1  //6
 x+=1 //6
 x++ //6 soma um
 //TR√äS EXEMPLOS COM A MESMA CONTA POREM DE FORMAS DIFERENTES 
 let x = 5
 x=x-1 //4
 x-=1 //4
 x-- // subtrai um



/*A ordem de precedencia da conta aritm√©tica aqui segue a mesma regra da matem√°tica... Em uma equa√ß√£o primeiro vai ser calculado oo que estiver dentro de parenteses e ent√£o potencia **, multiplica√ß√£o* divis√£o/ ou resto% no caso destes tr√™s depende da ordem em que eles aparecem na equa√ß√£o e ent√£o soma* e subtra√ß√£o-, tamb√©m dependendo da ordem em que aparecem na expre√ß√£o aritm√©tica.

()
**
* / %
* -

o  sinal de igual (=) lee-se RECEBE. Dois sinais de igual (==) lee-se IGUAL e essa equality (allows type conversion) ou seja {console.log 5=="5" TRUE} √© importante saber que o 5 sem aspas √© considerado um n√∫mero por√©m dentro das aspas ele se torna um texto, ou seja, ali temos (number vs string). E tr√™s sinais de igual significa igual em todos os sentido at√© em type. Strict equality (no type conversion). {console.log 5==="5" FALSE} falso pois ali temos ( 5 number vs 5 string). Para ser considerado verdadeiro eles precisam ser iguais console.log(5 === 5); true (same value, same type) use ===  for precise comparisons where type matters.

*/ 

//OPERADORES RELACIONAIS
//PARA ODA EXPRESS√ÉOQ UE TENHA UM OPERADOR RELACIONAL LIGADO A ELA O RESULTADO SEMPRE SER√Å UM BOLEANO
/*

n tem ordem de precedencia. √â lido da esquerda para a direita

> maior
< menor
>= maior ou igual
<= menor ou igual
== igual
!= diferente

*/

//OPERADORES L√ìGICOS

/*

! Nega√ß√£o                      !
&& Conjun√ß√£o ou "E"            
|| Disjun√ß√£o ou "OU"

idade >= 15 && idade<=17 Aqui estamos perguntando de a idade est√° entre 15 e 17 anos
estado == "RJ" || estado == "SP" O estado √© RJ ou SP?
sal√°rio > 1500 && sexo !="M" O sal√°rio √© acima de 1500 e n√£o √© homem? !="M" significa sexo diferente de masculino

ordem de precedencia
neste caso a ordem de execu√ß√£o no JS caso tenhamos mais de um operador l√≥gico na express√£o √© !, && e ent√£o ||

*/

/*quando se tem operadores aritmeticos, relacionais e l√≥gicos em uma mesma express√£o a ordem em que ela √© lida pelo JS √© primeiro as contas aritm√©ticas depois os relacionais e ent√£o os operadores l√≥gicos */

OPERADOR TERN√ÅRIO

? :
condi√ß√£o ? valor_se_verdadeiro : valor_se_falso
TESTE ? TRUE : FALSE


//exercicios



/*

‚úÖ Aritm√©ticos:
	‚Ä¢	+, -, *, /, %

‚úÖ Relacionais (compara√ß√£o):
	‚Ä¢	>, <, >=, <=, ==, !=

‚úÖ L√≥gicos:
	‚Ä¢	&& (e)
	‚Ä¢	|| (ou)
	‚Ä¢	! (n√£o)

---------------------------------------------------------------------------------

Pergunta:
‚ÄúO usu√°rio tem permiss√£o se for ADMIN ou MODERADOR.‚Äù
‚û° Como ficaria a condi√ß√£o em JS?

usuario === "admin" || usuario === "moderador" 
---------------------------------------------------------------------------------
Pergunta:
‚ÄúPara entrar no evento, a pessoa precisa ter mais de 18 anos e ter ingresso.‚Äù
‚û° Como ficaria a condi√ß√£o em JS?

idade >= 18 && ingresso === "sim"
Dica: sempre use === ao inv√©s de ==, para garantir que o tipo tamb√©m seja igual.

---------------------------------------------------------------------------------

‚ÄúVerifique se um aluno passou. A nota precisa ser maior ou igual a 6.‚Äù

nota >= 6

---------------------------------------------------------------------------------

‚ÄúMostre se uma pessoa tem entre 18 e 59 anos (inclusive).‚Äù

idade >= 18 && idade <= 59

---------------------------------------------------------------------------------

‚ÄúVerifique se o n√∫mero N√ÉO √© maior que 10.‚Äù

numero !> 10 üõë Isso n√£o existe em JS. !> √© inv√°lido.

‚úÖ Correto seria: !(numero > 10) OU numero <= 10

---------------------------------------------------------------------------------

‚ÄúMostre no console se um usu√°rio tem nome igual a ‚Äòadmin‚Äô OU senha igual a ‚Äò1234‚Äô.‚Äù

nome === "admin" || senha === 1234 


---------------------------------------------------------------------------------

‚ÄúMostre se dois n√∫meros s√£o diferentes.‚Äù

2!=3


---------------------------------------------------------------------------------

‚ÄúVerifique se a idade √© menor que 12 ou maior que 60 (para desconto).‚Äù

idade < 12 || idade > 60

---------------------------------------------------------------------------------

‚ÄúMostre a soma, subtra√ß√£o, multiplica√ß√£o e divis√£o de dois n√∫meros no console.‚Äù

2 + 2
2 - 2
2 * 2
100 / 10

--------------------------------------------------------------------------------

3. ‚ÄúVerifique se um n√∫mero √© par usando o operador %.‚Äù

100 % 2 === 0
Isso retorna true se o n√∫mero for par.

--------------------------------------------------------------------------------

Verifique se a idade de uma pessoa est√° entre 13 e 17 anos, inclusive. (idade de adolescente)

idade >= 13 && idade <= 17
---------------------------------------------------------------------------------

Verifique se a soma de dois n√∫meros √© maior que 100.

numero + numero > 100
--------------------------------------------------------------------------------
Verifique se um n√∫mero n√£o est√° entre 20 e 50.

numero < 20 || numero > 50

--------------------------------------------------------------------------------
Verifique se a nota de um aluno √© menor que 3 ou maior que 9 (nota muito baixa ou muito alta).

nota < 3 || nota > 9
--------------------------------------------------------------------------------
Verifique se um n√∫mero √© √≠mpar.

numero % 2 !== 0
--------------------------------------------------------------------------------
Verifique se uma senha n√£o √© igual a "123456".

senha !== "123456"
--------------------------------------------------------------------------------
Dado o ano de nascimento, verifique se a pessoa √© maior de idade.

let anoNasc = 2007
let idade = 2025 - anoNasc
idade >= 18

--------------------------------------------------------------------------------
Verifique se dois n√∫meros s√£o iguais.

let a = 2
let b = 4
a === b
--------------------------------------------------------------------------------
Verifique se a m√©dia de duas notas √© maior ou igual a 6 (aprovado).

let nota1 = 7
let nota2 = 5
let media = (nota1 + nota2)/2
media >= 6

--------------------------------------------------------------------------------
Verifique se um n√∫mero √© negativo ou positivo.
numero > 0 
numero <0

Correto. Mas voc√™ pode colocar em forma de if para pr√°tica:
if (numero > 0) {
  console.log("N√∫mero positivo")
} else if (numero < 0) {
  console.log("N√∫mero negativo")
} else {
  console.log("Zero")
}
--------------------------------------------------------------------------------
Verifique se uma pessoa pode tirar carteira de motorista (idade m√≠nima 18)

idade >= 18
--------------------------------------------------------------------------------
Verifique se uma pessoa tem entre 60 e 80 anos (para uma promo√ß√£o especial).

idade >= 60 && idade <= 80
--------------------------------------------------------------------------------
Verifique se uma senha est√° errada (diferente de ‚Äúabc123‚Äù).

senha !== "abc123"

--------------------------------------------------------------------------------
Incremente um n√∫mero e verifique se ele passou de 100.

numero++
numero > 100
--------------------------------------------------------------------------------

Verifique se a idade √© diferente de 30.

idade !== 30
--------------------------------------------------------------------------------
Verifique se uma pessoa pode votar (idade maior ou igual a 16).

let anoNascimento = 2008
let idade = 2025 - anoNascimento
idade >= 16
--------------------------------------------------------------------------------

4. Verifique se dois nomes s√£o diferentes.

let name1 = "Brenna"
let name2 = "Natalia"

name1 == name2
--------------------------------------------------------------------------------

5. Some 10 ao n√∫mero e verifique se ele ficou maior que 50.

let number = 50
number + 10 > 50

--------------------------------------------------------------------------------
6. Verifique se a subtra√ß√£o entre dois n√∫meros √© negativa.

let number1 = 2
let number2 = 3
number1 - number2 < 0

--------------------------------------------------------------------------------

7. Verifique se a nota est√° entre 0 e 10 (nota v√°lida).

let nota1 = 6

nota1 >= 0 && nota1 <= 10
--------------------------------------------------------------------------------
9. Verifique se um n√∫mero √© maior que 20 ou menor que 10.

let number = 15

number > 20 || number < 10
--------------------------------------------------------------------------------
10. Verifique se um produto est√° fora da faixa de pre√ßo entre 100 e 200.

let produto = 150
produto < 100 || produto > 200
--------------------------------------------------------------------------------
> let idade = 19
> idade >= 18 ? 'Maior de idade' : 'Menor de idade'
'Maior de idade'

--

> let number = 2
> number % 2 == 0 ? 'Par' : '√çmpar'
'Par'

--

> let senha = 123456
> senha === 12356 ? 'Acesso permitido' : 'Senha incorreta' 
'Senha incorreta'

--

> let nota1 = 8
> let nota2 = 3
> let media = (nota1 + nota2) / 2
> media >= 6 ? 'Aprovado' : 'Reprovado'
'Reprovado'

------

> let temperatura = 32 
> temperatura >= 30 ? 'Est√° quente' : 'Temperatura Agrad√°vel'
'Est√° quente'

--

> let nomeUsuario = "admin"
> nomeUsuario === "admin" ? 'Bem-vindo, administrador' : 'Bem-vindo, usu√°rio'
'Bem-vindo, administrador
-------------------------------------------

-------------------------------------------

DOCUMENT OBJECT MODEL

*/